name: Build IRSL system
#run-name: "${{ github.actor }} / ${{ github.event_name }} / ${{ inputs.event_type }} / ${{ inputs.source }} / ${{ inputs.hash }}"
#
on:
  workflow_dispatch:
    inputs:
      event_type:
        required: false
        default: 'default'
        type: string
      source:
        required: false
        default: 'default'
        type: string
      hash:
        required: false
        default: 'default'
        type: string
  push:
    branches: [ main, devel ]
  pull_request:
    branches: [ main, devel ]
#  schedule:
#    - cron: '30 2 * * 2,6'
## source
### jupyter_plugin
### robot_assembler_plugin
### irsl_choreonoid
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build_target: [ 20.04, 24.04one ] ##
    runs-on: self-hosted
    env:
      IMAGE_NAME: irsl_system
      DOCKER_DEPLOY: repo.irsl.eiiris.tut.ac.jp/
      DOCKER_HUB: irslrepo/
      IMAGE_TAG: ${{ inputs.hash }}
      IMAGE_SRC: ${{ inputs.source }}
    steps:
      - name: test
        run: echo "${{github.ref}} / ${{github.repository}} / ${{github.ref_name}} / ${{github.head_ref}} / ${{github.event}}"
      - name: workflow_dispatch
        if: github.event_name == 'workflow_dispatch'
        run: echo "workflow_dispatch ${{ inputs.event_type }} from ${{ inputs.source }} ${{ inputs.hash }}"
      - name: Check Version
        run: |
          if   [ ${{ matrix.build_target }} == 22.04 ]; then
            echo "ROS_DISTRO=humble" >> $GITHUB_ENV
            echo "UBUNTU_VER=22.04"  >> $GITHUB_ENV
          elif [ ${{ matrix.build_target }} == 20.04 ]; then
            echo "ROS_DISTRO=noetic" >> $GITHUB_ENV
            echo "UBUNTU_VER=20.04"  >> $GITHUB_ENV
          elif [ ${{ matrix.build_target }} == 18.04 ]; then
            echo "ROS_DISTRO=melodic" >> $GITHUB_ENV
            echo "UBUNTU_VER=18.04"  >> $GITHUB_ENV
          elif [ ${{ matrix.build_target }} == 24.04 ]; then
            echo "ROS_DISTRO=jazzy" >> $GITHUB_ENV
            echo "UBUNTU_VER=24.04"  >> $GITHUB_ENV
          elif [ ${{ matrix.build_target }} == 24.04one ]; then
            echo "ROS_DISTRO=one" >> $GITHUB_ENV
            echo "UBUNTU_VER=24.04"  >> $GITHUB_ENV
          else
            echo "ROS_DISTRO=none" >> $GITHUB_ENV
          fi
      - name: Build Type
        if: inputs.event_type == 'build_devel' || github.ref_name == 'devel'
        run: echo "BUILD_DEVEL=devel" >> $GITHUB_ENV
      - name: Naming (Overwrite env)
        run: |
          if  [ -z "${IMAGE_TAG}" ]; then
            echo "IMAGE_TAG=latest${BUILD_DEVEL}" >> $GITHUB_ENV ;
          else
            echo "IMAGE_TAG=${IMAGE_TAG}${BUILD_DEVEL}" >> $GITHUB_ENV ;
          fi
          if  [ -z "${IMAGE_SRC}" ]; then
            echo "IMAGE_SRC=${{ github.event_name }}${BUILD_DEVEL}" >> $GITHUB_ENV ;
          else
            echo "IMAGE_SRC=${IMAGE_SRC}${BUILD_DEVEL}" >> $GITHUB_ENV ;
          fi
      - name: DebugMessage
        run: |
          echo "ref: ${{github.ref}} / repo: ${{github.repository}} / ref_nm: ${{github.ref_name}} / head_ref: ${{github.head_ref}}"
          echo "ros: ${ROS_DISTRO} / build: ${BUILD_DEVEL} / tag: ${IMAGE_TAG} / src: ${IMAGE_SRC}"
          echo "env: ${{ env.BUILD_DEVEL }}"
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Build (no cache)
        if: github.event_name == 'workflow_dispatch' && inputs.event_type != 'build_devel'
        env:
          NO_CACHE: 'YES'
          BUILD_ROS: ${{ env.ROS_DISTRO }}
        run: ./build.sh actions/irsl_system_${{ matrix.ubuntu }}_${IMAGE_SRC}:${IMAGE_TAG}
      - name: Build (Devel)
        if: inputs.event_type == 'build_devel' || github.ref_name == 'devel'
        env:
          NO_CACHE: 'YES'
          BUILD_ROS: ${{ env.ROS_DISTRO }}
        run: ./build.sh actions/irsl_system_${{ env.UBUNTU_VER }}_${IMAGE_SRC}:${IMAGE_TAG}
      - name: Build (cached)
        if: github.event_name != 'workflow_dispatch'
        env:
          NO_CACHE: ''
          BUILD_ROS: ${{ env.ROS_DISTRO }}
        run: ./build.sh actions/irsl_system_${{ env.UBUNTU_VER }}_${IMAGE_SRC}:${IMAGE_TAG}
      - name: Deploy
        if: github.event_name != 'pull_request' && env.BUILD_DEVEL != 'devel'
        run: |
          docker tag    actions/irsl_system_${{ matrix.build_target }}_${IMAGE_SRC}:${IMAGE_TAG} ${{ env.DOCKER_DEPLOY }}${{ env.IMAGE_NAME }}:${{ env.ROS_DISTRO }}
          docker push ${{ env.DOCKER_DEPLOY }}${{ env.IMAGE_NAME }}:${{ env.ROS_DISTRO }}
      - name: Deploy (Devel)
        if: github.event_name != 'pull_request' && env.BUILD_DEVEL == 'devel'
        run: |
          docker tag actions/irsl_system_${{ matrix.build_target }}_${IMAGE_SRC}:${IMAGE_TAG} ${{ env.DOCKER_DEPLOY }}${{ env.IMAGE_NAME }}_devel:${{ env.ROS_DISTRO }}
          docker push ${{ env.DOCKER_DEPLOY }}${{ env.IMAGE_NAME }}_devel:${{ env.ROS_DISTRO }}
      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Deploy(HUB)
        if: github.event_name != 'pull_request' && env.BUILD_DEVEL != 'devel'
        run: |
          docker tag    actions/irsl_system_${{ matrix.build_target }}_${IMAGE_SRC}:${IMAGE_TAG} ${{ env.DOCKER_HUB }}${{ env.IMAGE_NAME }}:${{ env.ROS_DISTRO }}
          docker push ${{ env.DOCKER_HUB }}${{ env.IMAGE_NAME }}:${{ env.ROS_DISTRO }}
      - name: Deploy(HUB, devel)
        if: github.event_name != 'pull_request' && env.BUILD_DEVEL == 'devel'
        run: |
          docker tag actions/irsl_system_${{ matrix.build_target }}_${IMAGE_SRC}:${IMAGE_TAG} ${{ env.DOCKER_HUB }}${{ env.IMAGE_NAME }}_devel:${{ env.ROS_DISTRO }}
          docker push ${{ env.DOCKER_HUB }}${{ env.IMAGE_NAME }}_devel:${{ env.ROS_DISTRO }}
