# create /choreonoid_ws
# choreonoid_ws: choreonoid
ARG BASE_IMAGE=ros:ros-melodic-base
FROM ${BASE_IMAGE}

ARG UBUNTU_VER=18.04

LABEL maintainer="IRSL-tut (https://github.com/IRSL-tut) <faculty@irsl.eiiris.tut.ac.jp>"

SHELL ["/bin/bash", "-c"]

# https://qiita.com/haessal/items/0a83fe9fa1ac00ed5ee9
ENV DEBCONF_NOWARNINGS=yes
# https://qiita.com/yagince/items/deba267f789604643bab
ENV DEBIAN_FRONTEND=noninteractive
# https://qiita.com/jacob_327/items/e99ca1cf8167d4c1486d
ENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1

### speedup download
# https://genzouw.com/entry/2019/09/04/085135/1718/
RUN sed -i 's@archive.ubuntu.com@ftp.jaist.ac.jp/pub/Linux@g' /etc/apt/sources.list

###
RUN apt update -q -qq && \
    apt install -q -qq -y curl wget git bc && \
    apt clean && \
    rm -rf /var/lib/apt/lists/

### install choreonoid
##https://github.com/choreonoid/choreonoid_ros.git
## compile failed, refere commits below
## https://github.com/choreonoid/choreonoid/commit/5a1dbbfad83f9bc677761c3915e5a4614d559183
## https://github.com/choreonoid/choreonoid_ros/commit/28ec82093a439e24c99e310472c5b9f7a95c583a
WORKDIR /choreonoid_ws
RUN source /opt/ros/${ROS_DISTRO}/setup.bash && \
    wstool init src https://raw.githubusercontent.com/IRSL-tut/irsl_choreonoid/main/config/dot.rosinstall && \
    wstool set choreonoid_ros      https://github.com/IRSL-tut/choreonoid_ros.git      -y -t src -v stable --git && \
    wstool set irsl_choreonoid_ros https://github.com/IRSL-tut/irsl_choreonoid_ros.git -y -t src           --git && \
    wstool set cnoid_cgal          https://github.com/IRSL-tut/cnoid_cgal.git          -y -t src           --git && \
    wstool set irsl_sim_environments https://github.com/IRSL-tut/irsl_sim_environments.git -y -t src       --git && \
    wstool set irsl_ros_msgs       https://github.com/IRSL-tut/irsl_ros_msgs.git       -y -t src           --git && \
    wstool set irsl_raspi_controller https://github.com/IRSL-tut/irsl_raspi_controller.git -y -t src       --git && \
    wstool update -t src && \
    patch -d src -p0 < src/irsl_choreonoid/config/osqp-cpp.patch && \
    patch -d src -p1 < src/irsl_choreonoid/config/choreonoid_closed_ik.patch

### add cgal to workspace for cnoid_cgal
RUN (cd src; mkdir cgal; wget https://github.com/CGAL/cgal/releases/download/v5.6/CGAL-5.6.tar.xz -O - | tar Jxf - --strip-components 1 -C cgal)
COPY files/cgal_package.xml src/cgal/package.xml

## add robot_assembler
RUN (cd /choreonoid_ws/src/choreonoid/ext; git clone https://github.com/IRSL-tut/robot_assembler_plugin.git)

## add jupyter_plugin
RUN (cd /choreonoid_ws/src/choreonoid/ext; git clone https://github.com/IRSL-tut/jupyter_plugin.git)

RUN apt update -q -qq && \
    src/choreonoid/misc/script/install-requisites-ubuntu-${UBUNTU_VER}.sh && \
    if [ "$ROS_DISTRO" = "noetic" ]; then \
    apt install -q -qq -y python3-catkin-tools libreadline-dev ipython3; \
    else \
    apt install -q -qq -y python-catkin-tools libreadline-dev ipython3; fi && \
    rosdep update -y -q -r && \
    rosdep install -y -q -r --ignore-src --from-path src/choreonoid_ros src/irsl_choreonoid_ros src/cnoid_cgal && \
    apt install -q -qq -y net-tools iproute2 libzmq5-dev && \
    apt clean && \
    rm -rf /var/lib/apt/lists/

# jupyter installed by Dockerfile.add_xeus
# RUN python3 -m pip install --upgrade pip && \
#     python3 -m pip install ipython jedi jupyterlab jupyter-console
RUN python3 -m pip install --upgrade pip && \
    python3 -m pip install paramiko scp scipy

### clean after build
#RUN /bin/bash -c "source /opt/ros/${ROS_DISTRO}/setup.bash && catkin config --cmake-args -DBUILD_TEST=ON && catkin config --install && catkin build irsl_choreonoid irsl_choreonoid_ros --no-status --no-notify -p 1 && catkin clean -d -b --logs -y"
### without clean
RUN /bin/bash -c "source /opt/ros/${ROS_DISTRO}/setup.bash && catkin config --cmake-args -DBUILD_TEST=ON && catkin config --install && catkin build irsl_choreonoid irsl_choreonoid_ros cnoid_cgal irsl_sim_environments irsl_detection_msgs irsl_raspi_controller --no-status --no-notify -p 1"


ADD files/kernels /jupyter/kernels
ADD userdir/ /user_scripts

### add jupyterlab settings 
RUN  mkdir -p /ros_home/.jupyter/lab/user-settings/\@jupyterlab/completer-extension && \
     echo -e '{\n\
    "availableProviders": {\n\
        "lsp": 700,\n\
        "CompletionProvider:context": 500,\n\
        "CompletionProvider:kernel": 1000\n\
    }\n\
}' >> /ros_home/.jupyter/lab/user-settings/\@jupyterlab/completer-extension/manager.jupyterlab-settings && \
     chmod -R a+rwx /ros_home/.jupyter

ENV PATH=$PATH:/user_scripts
ENV JUPYTER_PATH=/jupyter
ENV PYTHONPATH=/choreonoid_ws/install/lib/choreonoid-2.0/python

### [HOTFIX]
RUN if [ -e /choreonoid_ws/install/share/choreonoid-2.0/robot_assembler/irsl ]; then  rm -rf /choreonoid_ws/install/share/choreonoid-2.0/robot_assembler/irsl; fi && \
    git clone https://github.com/IRSL-tut/robot_assembler_config_IRSL.git /choreonoid_ws/install/share/choreonoid-2.0/robot_assembler/irsl
